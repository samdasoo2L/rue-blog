version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: rue-blog-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./storage:/var/www/html/storage
            - ./bootstrap/cache:/var/www/html/bootstrap/cache
        networks:
            - rue-blog-network
        depends_on:
            - db
        env_file:
            - .env.docker

    webserver:
        image: nginx:alpine
        container_name: rue-blog-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./public:/var/www/html/public
        networks:
            - rue-blog-network
        depends_on:
            - app

    db:
        image: mysql:8.0
        container_name: rue-blog-mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - rue-blog-network

# 컨테이너가 죽어도 데이터는 살아 있게 하기 위해 데이터 볼륨 설정
volumes:
    mysql_data:
        driver: local

networks:
    rue-blog-network:
        driver: bridge
